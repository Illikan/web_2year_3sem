def is_site_near_polygon(
    site_latlon: tuple[float, float],
    polygon_center_latlon: tuple[float, float],
    max_distance_km: float = 3000.0  
) -> bool:
    """
    Проверяет, находится ли станция в пределах max_distance_km от центра полигона.
    Использует расчет по большому кругу (great-circle distance).
    """
    site_lat, site_lon = site_latlon
    center_lat, center_lon = polygon_center_latlon

    # Преобразование градусов в радианы
    site_lat_rad = math.radians(site_lat)
    site_lon_rad = math.radians(site_lon)
    center_lat_rad = math.radians(center_lat)
    center_lon_rad = math.radians(center_lon)

    # Преобразование lat/lon в 3D декартовы единичные векторы
    site_vec = np.array([
        math.cos(site_lat_rad) * math.cos(site_lon_rad),
        math.cos(site_lat_rad) * math.sin(site_lon_rad),
        math.sin(site_lat_rad)
    ])
    center_vec = np.array([
        math.cos(center_lat_rad) * math.cos(center_lon_rad),
        math.cos(center_lat_rad) * math.sin(center_lon_rad),
        math.sin(center_lat_rad)
    ])

    # Вычисление угла между векторами через скалярное произведение
    dot_product = np.dot(site_vec, center_vec)
    # Ограничение значения для избежания ошибок с плавающей точкой
    dot_product = np.clip(dot_product, -1.0, 1.0)
    angle_rad = math.acos(dot_product)

    # Расчет расстояния
    earth_radius_km = RE / 1000.0
    distance_km = angle_rad * earth_radius_km

    return distance_km <= max_distance_km
