def get_main_map_data(study_date: datetime):
    # ...
    # --- Шаг 2: Чтение структуры H5 ---
    try:
        h5_file_path = load_h5_data(study_date)
        if not h5_file_path: raise FileNotFoundError(...)
        with h5py.File(h5_file_path, 'r') as f:
            all_stations_in_h5 = list(f.keys())
    except Exception as e:
        print(f"Ошибка на этапе чтения H5: {e}")
        return [], study_date

    # --- ШАГ 2.5: АСИНХРОННАЯ ЗАГРУЗКА ДАННЫХ О СТАНЦИЯХ (НОВЫЙ БЛОК) ---
    print(f"Найдено станций в H5: {len(all_stations_in_h5)}. Запускаю параллельную загрузку их координат...")
    # Запускаем асинхронную функцию и ждем ее выполнения
    all_stations_data = asyncio.run(get_all_site_data_concurrently(all_stations_in_h5))
    print(f"Координаты загружены для {len(all_stations_data)} станций. Фильтрую по расстоянию...")

    # --- Шаг 3: Фильтрация и подготовка к гео-расчетам ---
    relevant_station_sat_pairs = []
    poly_center_latlon = (0, 0)
    
    # Теперь мы итерируемся по уже загруженным данным, это происходит мгновенно
    for site_data in all_stations_data:
        if is_site_near_polygon(...):
             # Чтобы получить список спутников, нам все равно придется открыть H5 еще раз
             # Но это очень быстрая операция
             with h5py.File(h5_file_path, 'r') as f:
                 available_sats = list(f.get(site_data['id'], {}).keys())

             relevant_station_sat_pairs.append({
                 'site_data': site_data,
                 'sats': available_sats
             })
             
    # ... (остальная часть функции остается почти без изменений) ...
